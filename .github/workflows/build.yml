name: CI

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18.13
        uses: actions/setup-node@v4
        with:
          node-version: 18.13
          cache: 'npm'
      - name: Write commit SHA to package.jsons version field
        run: |
          node -e "const fs = require('node:fs'); \
            const raw = fs.readFileSync(\"./package.json\"); \
            const parsed = JSON.parse(raw); \
            parsed[\"version\"] = parsed[\"version\"] + \" - $GITHUB_SHA\"; \
            fs.writeFileSync(\"./package.json\", JSON.stringify(parsed, null, 2));"
      - name: Installing Dependencies
        run: npm ci
      - name: Building
        run: npm run build --if-present
      - name: Package App
        run: npm run package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./bin/orfondownloader
          asset_name: orfondownloader
          asset_content_type: application/x-executable
